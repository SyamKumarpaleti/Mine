{"ast":null,"code":"var _jsxFileName = \"C:\\\\JAVA react\\\\react_ui\\\\library\\\\library\\\\src\\\\components\\\\Customer\\\\dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { Link, useNavigate, useParams } from \"react-router-dom\";\n// import NavbarComponent from \"../navbar\";\n// import axios from \"axios\";\n// import { Button, Card, ListGroup, Nav, Row, Pagination, Form } from \"react-bootstrap\";\n\n// function CustomerDashboard({ setCart }) {\n//   const navigate = useNavigate();\n//   const { cid } = useParams();\n//   const [qStr, setQstr] = useState(\"\");\n//   const [book, setBooks] = useState([]);\n//   const [filteredBooks, setFilteredBooks] = useState([]);\n//   const [categories, setCategories] = useState([]);\n//   const [selectedCategory, setSelectedCategory] = useState(null);\n//   const [msg, setMsg] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [booksPerPage] = useState(6);\n\n//   useEffect(() => {\n//     axios\n//       .get(\"http://localhost:8182/Book/all\")\n//       .then((response) => {\n//         setBooks(response.data);\n//         setFilteredBooks(response.data);\n//       })\n//       .catch((error) => setMsg(\"Error in Fetching books\"));\n\n//     axios\n//       .get(\"http://localhost:8182/category/getall\")\n//       .then((response) => setCategories(response.data))\n//       .catch((error) => setMsg(\"Error in Fetching categories\"));\n//   }, []);\n\n//   const searchBooks = (str) => {\n//     setQstr(str);\n//     const filtered = book.filter((b) =>\n//       b.bookTitle.toLowerCase().includes(str.toLowerCase())\n//     );\n//     setFilteredBooks(filtered);\n//   };\n\n//   const getBookCategory = async (id) => {\n//     setLoading(true);\n//     setSelectedCategory(id);\n//     const response = await axios.get(\n//       `http://localhost:8182/customer/getbycategoryid?id=${id}`\n//     );\n//     setFilteredBooks(response.data || []);\n//   };\n\n//   const addToCart = (selectedBook) => {\n//     setCart((prevCart) => [...prevCart, selectedBook]);\n//   };\n\n//   const handleBooks = (selectedBook) => {\n//     if (localStorage.getItem(\"isLoggedIn\")) {\n//       addToCart(selectedBook);\n//       navigate(`/book/cart/${cid}`);\n//     } else {\n//       navigate(\"/auth/login\");\n//     }\n//   };\n\n//   const handleCategoryClick = (id) => {\n//     setSelectedCategory(id);\n//     getBookCategory(id);\n//   };\n\n//   const indexOfLastBook = currentPage * booksPerPage;\n//   const indexOfFirstBook = indexOfLastBook - booksPerPage;\n//   const currentBooks = filteredBooks.slice(indexOfFirstBook, indexOfLastBook);\n\n//   const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n//   const handlePrev = () => {\n//     if (currentPage > 1) {\n//       setCurrentPage(currentPage - 1);\n//     }\n//   };\n\n//   const handleNext = () => {\n//     if (currentPage < Math.ceil(filteredBooks.length / booksPerPage)) {\n//       setCurrentPage(currentPage + 1);\n//     }\n//   };\n\n//   return (\n//     <div style={{ \n//       padding: 20, \n//       minHeight: \"100vh\", \n//       fontFamily: \"Arial, sans-serif\", \n//       backgroundColor: \"#f8f9fa\", \n//       backgroundImage: 'url(\"https://img.freepik.com/premium-photo/book-table-with-library-background_865967-29196.jpg\")',\n//       backgroundSize: 'cover',\n//       backgroundPosition: 'center',\n//       backgroundRepeat: 'no-repeat',\n//     }}>\n//       <NavbarComponent func={searchBooks} /><br />\n//       <Row>\n//         <div className=\"col-md-4\">\n//           <Card style={{ width: \"27rem\", margin: 20 }}>\n//             <Card.Header style={{ backgroundColor: \"#343a40\", color: \"#fff\" }}>\n//               <h3 style={{ fontFamily: \"Arial, sans-serif\", margin: 0 }}>Categories</h3>\n//             </Card.Header>\n//             <ListGroup>\n//               {categories.map((c, index) => (\n//                 <div key={index}>\n//                   <ListGroup.Item\n//                     style={{ cursor: 'pointer', backgroundColor: selectedCategory === c.id ? '#007bff' : '' }}\n//                     onClick={() => handleCategoryClick(c.id)}\n//                   >\n//                     <Nav.Link>\n//                       <h4 style={{ color: selectedCategory === c.id ? \"#fff\" : \"#007bff\", fontWeight: \"bold\", fontFamily: \"Verdana, sans-serif\", margin: 0 }}>\n//                         {c.name}\n//                       </h4>\n//                     </Nav.Link>\n//                   </ListGroup.Item>\n//                 </div>\n//               ))}\n//             </ListGroup>\n//           </Card>\n//         </div>\n//         <div className=\"col-md-8\">\n//           <Form.Group controlId=\"formSearch\">\n//             <Form.Control\n//               type=\"text\"\n//               placeholder=\"Search books...\"\n//               value={qStr}\n//               onChange={(event) => searchBooks(event.target.value)}\n//               style={{ marginBottom: '20px' }}\n//             />\n//           </Form.Group>\n//           {filteredBooks.length > 0 ? (\n//             <>\n//               <Row>\n//                 {currentBooks.map((b, index) => (\n//                   <div key={index} className=\"col-md-4 mb-4\">\n//                     <Card style={{ width: '400px', marginBottom: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\n//                       <Card.Body>\n//                         <Card.Title style={{ fontSize: '1.5rem', marginBottom: '10px', color: \"#212529\" }}>\n//                           {b.bookTitle}\n//                         </Card.Title>\n//                         <hr />\n//                         <div>\n//                           <div style={{ display: 'flex', flexDirection: 'column', marginBottom: '10px' }}>\n//                             <div>\n//                               <span style={{ fontWeight: 'bold' }}>Rating:</span> {b.rating}\n//                             </div>\n//                             <div>\n//                               <span style={{ fontWeight: 'bold' }}>Author:</span>&nbsp;&nbsp;\n//                               <Link to={'/authors?id='+b.id} style={{ color: '#007bff' }}>\n//                                 {b.author}\n//                               </Link>\n//                             </div>\n//                             <div>\n//                               <span style={{ fontWeight: 'bold' }}>Price:</span> {b.bookPrice}\n//                             </div>\n//                             <div>\n//                               <Link to={'/books?id='+b.id} style={{ color: '#007bff' }}>\n//                                 Info\n//                               </Link>\n//                             </div>\n//                           </div>\n//                           <Button onClick={() => handleBooks(b)} style={{ width: 200, alignSelf: \"center\", margin: 15 }} variant=\"outline-primary\">Add to cart</Button>\n//                         </div>\n//                       </Card.Body>\n//                     </Card>\n//                   </div>\n//                 ))}\n//               </Row>\n//               <Pagination>\n//                 <Pagination.Prev onClick={handlePrev} style={{ cursor: currentPage > 1 ? 'pointer' : 'not-allowed' }} />\n//                 {Array.from({ length: Math.ceil(filteredBooks.length / booksPerPage) }).map((_, index) => (\n//                   <Pagination.Item\n//                     key={index + 1}\n//                     active={index + 1 === currentPage}\n//                     onClick={() => paginate(index + 1)}\n//                     style={{ backgroundColor: \"#007bff\", color: \"#fff\" }}\n//                   >\n//                     {index + 1}\n//                   </Pagination.Item>\n//                 ))}\n//                 <Pagination.Next onClick={handleNext} style={{ cursor: currentPage < Math.ceil(filteredBooks.length / booksPerPage) ? 'pointer' : 'not-allowed' }} />\n//               </Pagination>\n//             </>\n//           ) : (\n//             <p style={{ color: 'red', fontFamily: 'Arial, sans-serif', fontSize: '1.5rem', textAlign: 'center' }}>No Books found, try again.</p>\n//           )}\n//         </div>\n//       </Row>\n//       <div></div>\n//     </div>\n//   );\n// }\n\n// export default CustomerDashboard;\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport NavbarComponent from \"../navbar\";\nimport axios from \"axios\";\nimport { Button, Card, ListGroup, Nav, Row, Pagination } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomerDashboard({\n  cart,\n  setCart\n}) {\n  _s();\n  const navigate = useNavigate();\n  const {\n    cid\n  } = useParams();\n  const [qStr, setQstr] = useState(\"\");\n  const [book, setBooks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [msg, setMsg] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [category, setCategory] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [booksPerPage] = useState(6);\n  useEffect(() => {\n    axios.get(\"http://localhost:8182/Book/all\").then(response => setBooks(response.data)).catch(error => setMsg(\"Error in Fetching books\"));\n    axios.get(\"http://localhost:8182/category/getall\").then(response => setCategories(response.data)).catch(error => setMsg(\"Error in Fetching categories\"));\n  }, []);\n  const searchBooks = str => {\n    setQstr(str);\n  };\n  const navigateToAuthor = authorId => {\n    navigate(`/authors/${authorId}`);\n  };\n  const getBookCategory = async id => {\n    setLoading(true);\n    const response = await axios.get(`http://localhost:8182/customer/getbycategoryid?id=${id}`);\n    setBooks(response.data || []);\n  };\n  const addToCart = selectedBook => {\n    setCart(prevCart => [...prevCart, selectedBook]);\n  };\n  const handleBooks = selectedBook => {\n    if (localStorage.getItem(\"isLoggedIn\")) {\n      addToCart(selectedBook);\n      navigate(`/book/cart/${cid}`);\n    } else {\n      navigate(\"/auth/login\");\n    }\n  };\n  const indexOfLastBook = currentPage * booksPerPage;\n  const indexOfFirstBook = indexOfLastBook - booksPerPage;\n  const currentBooks = book.slice(indexOfFirstBook, indexOfLastBook);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#3456\",\n      padding: 20,\n      minHeight: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(NavbarComponent, {\n      func: searchBooks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: \"27rem\",\n            margin: 20,\n            backgroundColor: \"#fff\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            style: {\n              backgroundColor: \"#3498db\",\n              color: \"#fff\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontFamily: \"Arial, sans-serif\"\n              },\n              children: \"Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: categories.map((c, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                  onClick: () => {\n                    getBookCategory(c.id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                    style: {\n                      color: \"#2c3e50\",\n                      fontWeight: \"bold\",\n                      fontFamily: \"Verdana, sans-serif\"\n                    },\n                    children: c.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: currentBooks.map((b, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '400px',\n                backgroundColor: '#your_card_background_color_here'\n              },\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                style: {\n                  backgroundColor: '#your_card_body_background_color_here'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: '/books?id=' + b.id,\n                  children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: b.bookTitle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      flexDirection: 'column',\n                      marginBottom: '10px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          fontWeight: 'bold'\n                        },\n                        children: \"Rating:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 305,\n                        columnNumber: 27\n                      }, this), \" \", b.rating]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          fontWeight: 'bold'\n                        },\n                        children: \"Author:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 308,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Link, {\n                        to: '/authors?id=' + b.id,\n                        children: b.author\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 309,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          fontWeight: 'bold'\n                        },\n                        children: \"Price:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 315,\n                        columnNumber: 27\n                      }, this), \" \", b.bookPrice]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 314,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => handleBooks(b),\n                    style: {\n                      width: 200,\n                      alignSelf: \"center\",\n                      margin: 15\n                    },\n                    variant: \"outline-primary\",\n                    children: \"Add to cart\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          children: Array.from({\n            length: Math.ceil(book.length / booksPerPage)\n          }).map((_, index) => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n            active: index + 1 === currentPage,\n            onClick: () => paginate(index + 1),\n            children: index + 1\n          }, index + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomerDashboard, \"m0TfrZtII5yfF2uKwyTUpj7c7Ys=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CustomerDashboard;\nexport default CustomerDashboard;\nvar _c;\n$RefreshReg$(_c, \"CustomerDashboard\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","useParams","NavbarComponent","axios","Button","Card","ListGroup","Nav","Row","Pagination","jsxDEV","_jsxDEV","CustomerDashboard","cart","setCart","_s","navigate","cid","qStr","setQstr","book","setBooks","categories","setCategories","msg","setMsg","loading","setLoading","category","setCategory","currentPage","setCurrentPage","booksPerPage","get","then","response","data","catch","error","searchBooks","str","navigateToAuthor","authorId","getBookCategory","id","addToCart","selectedBook","prevCart","handleBooks","localStorage","getItem","indexOfLastBook","indexOfFirstBook","currentBooks","slice","paginate","pageNumber","style","backgroundColor","padding","minHeight","children","func","fileName","_jsxFileName","lineNumber","columnNumber","className","width","margin","Header","color","fontFamily","map","c","index","Item","onClick","fontWeight","name","b","Body","to","Title","bookTitle","display","flexDirection","marginBottom","rating","author","bookPrice","alignSelf","variant","Array","from","length","Math","ceil","_","active","_c","$RefreshReg$"],"sources":["C:/JAVA react/react_ui/library/library/src/components/Customer/dashboard.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { Link, useNavigate, useParams } from \"react-router-dom\";\r\n// import NavbarComponent from \"../navbar\";\r\n// import axios from \"axios\";\r\n// import { Button, Card, ListGroup, Nav, Row, Pagination, Form } from \"react-bootstrap\";\r\n\r\n// function CustomerDashboard({ setCart }) {\r\n//   const navigate = useNavigate();\r\n//   const { cid } = useParams();\r\n//   const [qStr, setQstr] = useState(\"\");\r\n//   const [book, setBooks] = useState([]);\r\n//   const [filteredBooks, setFilteredBooks] = useState([]);\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [selectedCategory, setSelectedCategory] = useState(null);\r\n//   const [msg, setMsg] = useState(\"\");\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const [booksPerPage] = useState(6);\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\"http://localhost:8182/Book/all\")\r\n//       .then((response) => {\r\n//         setBooks(response.data);\r\n//         setFilteredBooks(response.data);\r\n//       })\r\n//       .catch((error) => setMsg(\"Error in Fetching books\"));\r\n\r\n//     axios\r\n//       .get(\"http://localhost:8182/category/getall\")\r\n//       .then((response) => setCategories(response.data))\r\n//       .catch((error) => setMsg(\"Error in Fetching categories\"));\r\n//   }, []);\r\n\r\n//   const searchBooks = (str) => {\r\n//     setQstr(str);\r\n//     const filtered = book.filter((b) =>\r\n//       b.bookTitle.toLowerCase().includes(str.toLowerCase())\r\n//     );\r\n//     setFilteredBooks(filtered);\r\n//   };\r\n\r\n//   const getBookCategory = async (id) => {\r\n//     setLoading(true);\r\n//     setSelectedCategory(id);\r\n//     const response = await axios.get(\r\n//       `http://localhost:8182/customer/getbycategoryid?id=${id}`\r\n//     );\r\n//     setFilteredBooks(response.data || []);\r\n//   };\r\n\r\n//   const addToCart = (selectedBook) => {\r\n//     setCart((prevCart) => [...prevCart, selectedBook]);\r\n//   };\r\n\r\n//   const handleBooks = (selectedBook) => {\r\n//     if (localStorage.getItem(\"isLoggedIn\")) {\r\n//       addToCart(selectedBook);\r\n//       navigate(`/book/cart/${cid}`);\r\n//     } else {\r\n//       navigate(\"/auth/login\");\r\n//     }\r\n//   };\r\n\r\n//   const handleCategoryClick = (id) => {\r\n//     setSelectedCategory(id);\r\n//     getBookCategory(id);\r\n//   };\r\n\r\n//   const indexOfLastBook = currentPage * booksPerPage;\r\n//   const indexOfFirstBook = indexOfLastBook - booksPerPage;\r\n//   const currentBooks = filteredBooks.slice(indexOfFirstBook, indexOfLastBook);\r\n\r\n//   const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n//   const handlePrev = () => {\r\n//     if (currentPage > 1) {\r\n//       setCurrentPage(currentPage - 1);\r\n//     }\r\n//   };\r\n\r\n//   const handleNext = () => {\r\n//     if (currentPage < Math.ceil(filteredBooks.length / booksPerPage)) {\r\n//       setCurrentPage(currentPage + 1);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ \r\n//       padding: 20, \r\n//       minHeight: \"100vh\", \r\n//       fontFamily: \"Arial, sans-serif\", \r\n//       backgroundColor: \"#f8f9fa\", \r\n//       backgroundImage: 'url(\"https://img.freepik.com/premium-photo/book-table-with-library-background_865967-29196.jpg\")',\r\n//       backgroundSize: 'cover',\r\n//       backgroundPosition: 'center',\r\n//       backgroundRepeat: 'no-repeat',\r\n//     }}>\r\n//       <NavbarComponent func={searchBooks} /><br />\r\n//       <Row>\r\n//         <div className=\"col-md-4\">\r\n//           <Card style={{ width: \"27rem\", margin: 20 }}>\r\n//             <Card.Header style={{ backgroundColor: \"#343a40\", color: \"#fff\" }}>\r\n//               <h3 style={{ fontFamily: \"Arial, sans-serif\", margin: 0 }}>Categories</h3>\r\n//             </Card.Header>\r\n//             <ListGroup>\r\n//               {categories.map((c, index) => (\r\n//                 <div key={index}>\r\n//                   <ListGroup.Item\r\n//                     style={{ cursor: 'pointer', backgroundColor: selectedCategory === c.id ? '#007bff' : '' }}\r\n//                     onClick={() => handleCategoryClick(c.id)}\r\n//                   >\r\n//                     <Nav.Link>\r\n//                       <h4 style={{ color: selectedCategory === c.id ? \"#fff\" : \"#007bff\", fontWeight: \"bold\", fontFamily: \"Verdana, sans-serif\", margin: 0 }}>\r\n//                         {c.name}\r\n//                       </h4>\r\n//                     </Nav.Link>\r\n//                   </ListGroup.Item>\r\n//                 </div>\r\n//               ))}\r\n//             </ListGroup>\r\n//           </Card>\r\n//         </div>\r\n//         <div className=\"col-md-8\">\r\n//           <Form.Group controlId=\"formSearch\">\r\n//             <Form.Control\r\n//               type=\"text\"\r\n//               placeholder=\"Search books...\"\r\n//               value={qStr}\r\n//               onChange={(event) => searchBooks(event.target.value)}\r\n//               style={{ marginBottom: '20px' }}\r\n//             />\r\n//           </Form.Group>\r\n//           {filteredBooks.length > 0 ? (\r\n//             <>\r\n//               <Row>\r\n//                 {currentBooks.map((b, index) => (\r\n//                   <div key={index} className=\"col-md-4 mb-4\">\r\n//                     <Card style={{ width: '400px', marginBottom: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n//                       <Card.Body>\r\n//                         <Card.Title style={{ fontSize: '1.5rem', marginBottom: '10px', color: \"#212529\" }}>\r\n//                           {b.bookTitle}\r\n//                         </Card.Title>\r\n//                         <hr />\r\n//                         <div>\r\n//                           <div style={{ display: 'flex', flexDirection: 'column', marginBottom: '10px' }}>\r\n//                             <div>\r\n//                               <span style={{ fontWeight: 'bold' }}>Rating:</span> {b.rating}\r\n//                             </div>\r\n//                             <div>\r\n//                               <span style={{ fontWeight: 'bold' }}>Author:</span>&nbsp;&nbsp;\r\n//                               <Link to={'/authors?id='+b.id} style={{ color: '#007bff' }}>\r\n//                                 {b.author}\r\n//                               </Link>\r\n//                             </div>\r\n//                             <div>\r\n//                               <span style={{ fontWeight: 'bold' }}>Price:</span> {b.bookPrice}\r\n//                             </div>\r\n//                             <div>\r\n//                               <Link to={'/books?id='+b.id} style={{ color: '#007bff' }}>\r\n//                                 Info\r\n//                               </Link>\r\n//                             </div>\r\n//                           </div>\r\n//                           <Button onClick={() => handleBooks(b)} style={{ width: 200, alignSelf: \"center\", margin: 15 }} variant=\"outline-primary\">Add to cart</Button>\r\n//                         </div>\r\n//                       </Card.Body>\r\n//                     </Card>\r\n//                   </div>\r\n//                 ))}\r\n//               </Row>\r\n//               <Pagination>\r\n//                 <Pagination.Prev onClick={handlePrev} style={{ cursor: currentPage > 1 ? 'pointer' : 'not-allowed' }} />\r\n//                 {Array.from({ length: Math.ceil(filteredBooks.length / booksPerPage) }).map((_, index) => (\r\n//                   <Pagination.Item\r\n//                     key={index + 1}\r\n//                     active={index + 1 === currentPage}\r\n//                     onClick={() => paginate(index + 1)}\r\n//                     style={{ backgroundColor: \"#007bff\", color: \"#fff\" }}\r\n//                   >\r\n//                     {index + 1}\r\n//                   </Pagination.Item>\r\n//                 ))}\r\n//                 <Pagination.Next onClick={handleNext} style={{ cursor: currentPage < Math.ceil(filteredBooks.length / booksPerPage) ? 'pointer' : 'not-allowed' }} />\r\n//               </Pagination>\r\n//             </>\r\n//           ) : (\r\n//             <p style={{ color: 'red', fontFamily: 'Arial, sans-serif', fontSize: '1.5rem', textAlign: 'center' }}>No Books found, try again.</p>\r\n//           )}\r\n//         </div>\r\n//       </Row>\r\n//       <div></div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default CustomerDashboard;\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport NavbarComponent from \"../navbar\";\r\nimport axios from \"axios\";\r\nimport { Button, Card, ListGroup, Nav, Row, Pagination } from \"react-bootstrap\";\r\n\r\nfunction CustomerDashboard({ cart, setCart }) {\r\n  const navigate = useNavigate();\r\n  const { cid } = useParams();\r\n  const [qStr, setQstr] = useState(\"\");\r\n  const [book, setBooks] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [category, setCategory] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [booksPerPage] = useState(6);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8182/Book/all\")\r\n      .then((response) => setBooks(response.data))\r\n      .catch((error) => setMsg(\"Error in Fetching books\"));\r\n\r\n    axios\r\n      .get(\"http://localhost:8182/category/getall\")\r\n      .then((response) => setCategories(response.data))\r\n      .catch((error) => setMsg(\"Error in Fetching categories\"));\r\n  }, []);\r\n\r\n  const searchBooks = (str) => {\r\n    setQstr(str);\r\n  };\r\n\r\n  const navigateToAuthor = (authorId) => {\r\n    navigate(`/authors/${authorId}`);\r\n  };\r\n\r\n  const getBookCategory = async (id) => {\r\n    setLoading(true);\r\n    const response = await axios.get(\r\n      `http://localhost:8182/customer/getbycategoryid?id=${id}`\r\n    );\r\n    setBooks(response.data || []);\r\n  };\r\n\r\n  const addToCart = (selectedBook) => {\r\n    setCart((prevCart) => [...prevCart, selectedBook]);\r\n  };\r\n\r\n  const handleBooks = (selectedBook) => {\r\n    if (localStorage.getItem(\"isLoggedIn\")) {\r\n      addToCart(selectedBook);\r\n      navigate(`/book/cart/${cid}`);\r\n    } else {\r\n      navigate(\"/auth/login\");\r\n    }\r\n  };\r\n\r\n  const indexOfLastBook = currentPage * booksPerPage;\r\n  const indexOfFirstBook = indexOfLastBook - booksPerPage;\r\n  const currentBooks = book.slice(indexOfFirstBook, indexOfLastBook);\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#3456\", padding: 20, minHeight: \"100vh\" }}>\r\n      <NavbarComponent func={searchBooks} />\r\n      <Row>\r\n        <div className=\"col-md-4\">\r\n          <Card style={{ width: \"27rem\", margin: 20, backgroundColor: \"#fff\" }}>\r\n            <Card.Header style={{ backgroundColor: \"#3498db\", color: \"#fff\" }}>\r\n              <h3 style={{ fontFamily: \"Arial, sans-serif\" }}>Categories</h3>\r\n            </Card.Header>\r\n            <ListGroup>\r\n              {categories.map((c, index) => (\r\n                <div key={index}>\r\n                  <ListGroup.Item>\r\n                    <Nav.Link onClick={() => { getBookCategory(c.id); }}>\r\n                      <h4 style={{ color: \"#2c3e50\", fontWeight: \"bold\", fontFamily: \"Verdana, sans-serif\" }}>\r\n                        {c.name}\r\n                      </h4>\r\n                    </Nav.Link>\r\n                  </ListGroup.Item>\r\n                </div>\r\n              ))}\r\n            </ListGroup>\r\n          </Card>\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          <Row>\r\n            {currentBooks.map((b, index) => (\r\n              <div key={index} className=\"col-md-4 mb-4\">\r\n                <Card style={{ width: '400px', backgroundColor: '#your_card_background_color_here' }}>\r\n                  <Card.Body style={{ backgroundColor: '#your_card_body_background_color_here' }}>\r\n                    <Link to={'/books?id='+b.id} >\r\n                      <Card.Title>\r\n                        {b.bookTitle}\r\n                      </Card.Title>\r\n                    </Link>\r\n                    <hr />\r\n                    <div>\r\n                      <div style={{ display: 'flex', flexDirection: 'column', marginBottom: '10px' }}>\r\n                        <div>\r\n                          <span style={{ fontWeight: 'bold' }}>Rating:</span> {b.rating}\r\n                        </div>\r\n                        <div>\r\n                          <span style={{ fontWeight: 'bold' }}>Author:</span>\r\n                          <Link to={'/authors?id='+b.id}>\r\n                            {b.author}\r\n                          </Link>\r\n                        </div>\r\n                       \r\n                        <div>\r\n                          <span style={{ fontWeight: 'bold' }}>Price:</span> {b.bookPrice}\r\n                        </div>\r\n                      </div>\r\n                      <Button onClick={() => handleBooks(b)} style={{ width: 200, alignSelf: \"center\", margin: 15 }} variant=\"outline-primary\">Add to cart</Button>\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              </div>\r\n            ))}\r\n          </Row>\r\n          <Pagination>\r\n            {Array.from({ length: Math.ceil(book.length / booksPerPage) }).map((_, index) => (\r\n              <Pagination.Item\r\n                key={index + 1}\r\n                active={index + 1 === currentPage}\r\n                onClick={() => paginate(index + 1)}\r\n              >\r\n                {index + 1}\r\n              </Pagination.Item>\r\n            ))}\r\n          </Pagination>\r\n        </div>\r\n      </Row>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerDashboard;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAC/D,OAAOC,eAAe,MAAM,WAAW;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,EAAEC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEh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"},"metadata":{},"sourceType":"module","externalDependencies":[]}