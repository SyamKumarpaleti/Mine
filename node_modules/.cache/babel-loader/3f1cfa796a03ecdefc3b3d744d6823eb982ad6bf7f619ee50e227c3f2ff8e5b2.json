{"ast":null,"code":"var _jsxFileName = \"C:\\\\JAVA react\\\\react_ui\\\\library\\\\library\\\\src\\\\components\\\\Customer\\\\history.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\n// import Navbarcomponent from \"../navbar\";\n// import axios from \"axios\";\n// import { Table } from \"react-bootstrap\";\n\n// function PreviousOrders() {\n//   const [orders, setOrders] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch orders from the API\n//     axios.get(\"http://localhost:8182/customerBook/customerid/15\")\n//       .then((response) => setOrders(response.data))\n//       .catch((error) => console.error(\"Error fetching orders:\", error));\n//   }, []);\n\n//   return (\n//     <div>\n//       <div>\n//         <Navbarcomponent />\n//       </div>\n//       <h1>Previous orders</h1>\n//       <Table>\n//         <thead>\n//           <tr>\n//             <th>Order ID</th>\n//             <th>Issue Date</th>\n//             <th>Return Date</th>\n//             <th>Fine</th>\n//             {/* Add more columns based on your data structure */}\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {orders.map((order) => (\n//             <tr key={order.id}>\n//               <td>{order.id}</td>\n//               <td>{order.issueDate}</td>\n//               <td>{order.returnDate}</td>\n//               <td>{order.amount}</td>\n//               {/* Add more cells based on your data structure */}\n//             </tr>\n//           ))}\n//         </tbody>\n//       </Table>\n//     </div>\n//   );\n// }\n\n// export default PreviousOrders;\n\nimport { useEffect, useState } from \"react\";\nimport { Card, Col, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getHist } from \"../../store/actions/allbooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllAdmissions() {\n  _s();\n  const [hists, setHists] = useState([]);\n  const dispatch = useDispatch();\n  let {\n    list\n  } = useSelector(state => state.hist);\n  useEffect(() => {\n    dispatch(getHist());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      md: {\n        span: 6,\n        offset: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        bg: \"secondary\",\n        text: \"white\",\n        style: {\n          width: '70%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          style: {\n            backgroundColor: 'gray',\n            color: '#fff',\n            fontSize: '140%'\n          },\n          children: \"History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            variant: \"dark\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"SI No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Return Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Issue Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Fine Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: list.map((hist, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: hist.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: hist.retrundate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: hist.issuedate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: hist.amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(AllAdmissions, \"/ALDPGFAjh85PCWdjbp8Q2/L+0E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AllAdmissions;\nexport default AllAdmissions;\nvar _c;\n$RefreshReg$(_c, \"AllAdmissions\");","map":{"version":3,"names":["useEffect","useState","Card","Col","Table","useDispatch","useSelector","getHist","jsxDEV","_jsxDEV","AllAdmissions","_s","hists","setHists","dispatch","list","state","hist","children","md","span","offset","bg","text","style","width","Header","backgroundColor","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","Body","striped","bordered","hover","variant","map","index","id","retrundate","issuedate","amount","_c","$RefreshReg$"],"sources":["C:/JAVA react/react_ui/library/library/src/components/Customer/history.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n// import Navbarcomponent from \"../navbar\";\r\n// import axios from \"axios\";\r\n// import { Table } from \"react-bootstrap\";\r\n\r\n// function PreviousOrders() {\r\n//   const [orders, setOrders] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch orders from the API\r\n//     axios.get(\"http://localhost:8182/customerBook/customerid/15\")\r\n//       .then((response) => setOrders(response.data))\r\n//       .catch((error) => console.error(\"Error fetching orders:\", error));\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <Navbarcomponent />\r\n//       </div>\r\n//       <h1>Previous orders</h1>\r\n//       <Table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Order ID</th>\r\n//             <th>Issue Date</th>\r\n//             <th>Return Date</th>\r\n//             <th>Fine</th>\r\n//             {/* Add more columns based on your data structure */}\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {orders.map((order) => (\r\n//             <tr key={order.id}>\r\n//               <td>{order.id}</td>\r\n//               <td>{order.issueDate}</td>\r\n//               <td>{order.returnDate}</td>\r\n//               <td>{order.amount}</td>\r\n//               {/* Add more cells based on your data structure */}\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </Table>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default PreviousOrders;\r\n\r\n\r\n\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { Card, Col, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getHist } from \"../../store/actions/allbooks\";\r\n\r\n\r\nfunction AllAdmissions(){\r\n    const [hists, setHists] = useState([]); \r\n    const dispatch = useDispatch();\r\n    let { list } = useSelector((state) => state.hist);\r\n   \r\n    useEffect(() => {\r\n        dispatch(getHist());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            <Col md={{ span: 6, offset: 3 }}>\r\n                <Card bg=\"secondary\" text=\"white\" style={{ width: '70%' }}>\r\n                    <Card.Header style={{ backgroundColor: 'gray', color: '#fff', fontSize: '140%' }}>History</Card.Header>\r\n                    <Card.Body>\r\n                        <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>SI No</th>\r\n                                    <th>ID</th>\r\n                                    <th>Return Date</th>\r\n                                    <th>Issue Date</th>\r\n                                    <th>Fine Amount</th>\r\n                                    {/* Add more table headers as needed */}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {list.map((hist, index) => (\r\n                                    <tr key={index}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{hist.id}</td>\r\n                                        <td>{hist.retrundate}</td>\r\n                                        <td>{hist.issuedate}</td>\r\n                                        <td>{hist.amount}</td>\r\n                                        {/* Add more table cells with admission data */}\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllAdmissions;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,EAAEC,GAAG,EAAEC,KAAK,QAAQ,iBAAiB;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvD,SAASC,aAAaA,CAAA,EAAE;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMa,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,IAAI;IAAEU;EAAK,CAAC,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAEjDjB,SAAS,CAAC,MAAM;IACZc,QAAQ,CAACP,OAAO,CAAC,CAAC,CAAC;EACvB,CAAC,EAAE,CAACO,QAAQ,CAAC,CAAC;EAEd,oBACIL,OAAA;IAAAS,QAAA,eACIT,OAAA,CAACN,GAAG;MAACgB,EAAE,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAE;MAAAH,QAAA,eAC5BT,OAAA,CAACP,IAAI;QAACoB,EAAE,EAAC,WAAW;QAACC,IAAI,EAAC,OAAO;QAACC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAP,QAAA,gBACtDT,OAAA,CAACP,IAAI,CAACwB,MAAM;UAACF,KAAK,EAAE;YAAEG,eAAe,EAAE,MAAM;YAAEC,KAAK,EAAE,MAAM;YAAEC,QAAQ,EAAE;UAAO,CAAE;UAAAX,QAAA,EAAC;QAAO;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACvGxB,OAAA,CAACP,IAAI,CAACgC,IAAI;UAAAhB,QAAA,eACNT,OAAA,CAACL,KAAK;YAAC+B,OAAO;YAACC,QAAQ;YAACC,KAAK;YAACC,OAAO,EAAC,MAAM;YAAApB,QAAA,gBACxCT,OAAA;cAAAS,QAAA,eACIT,OAAA;gBAAAS,QAAA,gBACIT,OAAA;kBAAAS,QAAA,EAAI;gBAAK;kBAAAY,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACdxB,OAAA;kBAAAS,QAAA,EAAI;gBAAE;kBAAAY,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACXxB,OAAA;kBAAAS,QAAA,EAAI;gBAAW;kBAAAY,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACpBxB,OAAA;kBAAAS,QAAA,EAAI;gBAAU;kBAAAY,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACnBxB,OAAA;kBAAAS,QAAA,EAAI;gBAAW;kBAAAY,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEpB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eACRxB,OAAA;cAAAS,QAAA,EACKH,IAAI,CAACwB,GAAG,CAAC,CAACtB,IAAI,EAAEuB,KAAK,kBAClB/B,OAAA;gBAAAS,QAAA,gBACIT,OAAA;kBAAAS,QAAA,EAAKsB,KAAK,GAAG;gBAAC;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACpBxB,OAAA;kBAAAS,QAAA,EAAKD,IAAI,CAACwB;gBAAE;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAClBxB,OAAA;kBAAAS,QAAA,EAAKD,IAAI,CAACyB;gBAAU;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC1BxB,OAAA;kBAAAS,QAAA,EAAKD,IAAI,CAAC0B;gBAAS;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACzBxB,OAAA;kBAAAS,QAAA,EAAKD,IAAI,CAAC2B;gBAAM;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA,GALjBO,KAAK;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAOV,CACP;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACtB,EAAA,CA5CQD,aAAa;EAAA,QAEDL,WAAW,EACbC,WAAW;AAAA;AAAAuC,EAAA,GAHrBnC,aAAa;AA8CtB,eAAeA,aAAa;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}