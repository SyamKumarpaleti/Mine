{"ast":null,"code":"var _jsxFileName = \"C:\\\\JAVA react\\\\react_ui\\\\library\\\\library\\\\src\\\\components\\\\Admin\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport AdminNavbar from \"./adminnavbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [books, setBooks] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [customerBookings, setCustomerBookings] = useState([]);\n  const [showBooks, setShowBooks] = useState(false);\n  const [showCustomers, setShowCustomers] = useState(false);\n  const [showCustomerBookings, setShowCustomerBookings] = useState(false);\n  const navigate = useNavigate(); // Use navigate hook for navigation\n  const dispatch = useDispatch();\n  let {\n    list\n  } = useSelector(state => state.book);\n  useEffect(() => {\n    // Fetch data when component mounts\n    fetchBooks();\n    fetchCustomers();\n    fetchCustomerBookings();\n  }, []);\n\n  // const fetchBooks = async () => {\n  //   try {\n  //     const response = await axios.get(\"http://localhost:8182/Book/all\");\n  //     setBooks(response.data);\n  //   } catch (error) {\n  //     console.error(\"Error fetching books:\", error.message);\n  //   }\n  // };\n  useEffect(() => {\n    dispatch(getBooks()); // Change 'getAdmissions' to 'getBooks'\n  }, [dispatch]);\n  const fetchCustomers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8182/customer/getall\");\n      setCustomers(response.data);\n    } catch (error) {\n      console.error(\"Error fetching customers:\", error.message);\n    }\n  };\n  const fetchCustomerBookings = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8182/customerBook/getall\");\n      setCustomerBookings(response.data);\n    } catch (error) {\n      console.error(\"Error fetching customer bookings:\", error.message);\n    }\n  };\n  const navigateToAddBook = () => {\n    navigate(`/admin/add/${id}`);\n  };\n  const navigateToUpdateBook = bookId => {\n    navigate(`/admin/update/${bookId}`);\n  };\n  const handleDeleteBook = async bookId => {\n    try {\n      await axios.delete(`http://localhost:8182/Book/delete/${bookId}`);\n      // Refresh the books list after deletion\n      fetchBooks();\n    } catch (error) {\n      console.error(\"Error deleting book:\", error.message);\n    }\n  };\n  const renderUniqueBooks = books => {\n    const uniqueBooks = [];\n    const bookIds = new Set();\n    for (const book of books) {\n      if (!bookIds.has(book.id)) {\n        uniqueBooks.push(book);\n        bookIds.add(book.id);\n      }\n    }\n    return uniqueBooks;\n  };\n  const renderUniqueCustomers = customers => {\n    const uniqueCustomers = [];\n    const customerIds = new Set();\n    for (const customer of customers) {\n      if (!customerIds.has(customer.id)) {\n        uniqueCustomers.push(customer);\n        customerIds.add(customer.id);\n      }\n    }\n    return uniqueCustomers;\n  };\n  const renderUniqueCustomerBookings = customerBookings => {\n    const uniqueCustomerBookings = [];\n    const bookingIds = new Set();\n    for (const booking of customerBookings) {\n      if (!bookingIds.has(booking.id)) {\n        uniqueCustomerBookings.push(booking);\n        bookingIds.add(booking.id);\n      }\n    }\n    return uniqueCustomerBookings;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AdminNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-4\",\n        children: \"Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${showBooks ? \"btn-danger\" : \"btn-success\"} mb-2`,\n        onClick: () => setShowBooks(!showBooks),\n        children: showBooks ? `Hide Books (${books.length})` : `Show Books (${books.length})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), showBooks && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap\",\n        children: books.map(book => /*#__PURE__*/_jsxDEV(Card, {\n          className: \"m-2\",\n          style: {\n            width: \"18rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: book.bookTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Author:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this), \" \", book.author]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Price:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this), \" \", book.bookPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"ISBN:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this), \" \", book.isbn]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              className: \"mr-2\",\n              onClick: () => navigateToAddBook(),\n              children: \"ADD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"info\",\n              onClick: () => navigateToUpdateBook(book.id),\n              children: \"UPDATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => handleDeleteBook(book.id),\n              children: \"DELETE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this)\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${showCustomers ? \"btn-danger\" : \"btn-success\"} mb-2 ml-2`,\n        onClick: () => setShowCustomers(!showCustomers),\n        children: showCustomers ? `Hide Customers (${customers.length})` : `Show Customers (${customers.length})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), showCustomers && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap\",\n        children: customers.map(customer => /*#__PURE__*/_jsxDEV(Card, {\n          className: \"m-2\",\n          style: {\n            width: \"18rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: customer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"City:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this), \" \", customer.city]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Contact:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this), \" \", customer.contact]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this)\n        }, customer.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${showCustomerBookings ? \"btn-danger\" : \"btn-success\"} mb-2 ml-2`,\n        onClick: () => setShowCustomerBookings(!showCustomerBookings),\n        children: showCustomerBookings ? \"Hide Customer Bookings\" : \"Show Customer Bookings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), showCustomerBookings && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap\",\n        children: renderUniqueCustomerBookings(customerBookings).map(booking => /*#__PURE__*/_jsxDEV(Card, {\n          className: \"m-2\",\n          style: {\n            width: \"18rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: booking.customer ? booking.customer.name : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Issue Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this), \" \", booking.issueDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Return Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this), \" \", booking.returnDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Fine Amount:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this), \" \", booking.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Book id:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this), \" \", booking.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this)\n        }, booking.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"xzg1wPBAVMd0BlBzJF4MguA7Ro0=\", true, function () {\n  return [useParams, useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\n\n// import React, { Component } from \"react\";\n// import { Button, Card, Row, Container, Col } from \"react-bootstrap\";\n// import axios from \"axios\";\n// import { Link } from \"react-router-dom\";\n// import AdminNavbar from \"./adminnavbar\";\n// import UpdateComponent from \"./update\";\n\n// class AdminDashboard extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       book: [],\n//       customer: [],\n//       customerBook: [],\n//       delBook: [],\n//     };\n//   }\n\n//   componentDidMount() {\n//     this.fetchBooks();\n//   }\n\n//   fetchBooks() {\n//     axios.get(\"http://localhost:8182/Book/all\").then((response) => {\n//       this.setState({ book: response.data });\n//     });\n//   }\n\n//   handleAllCustomers = () => {\n//     axios.get(\"http://localhost:8182/customer/getall\").then((response) => {\n//       this.setState({ customer: response.data });\n//     });\n//   };\n\n//   handleAllCustomerBooks = () => {\n//     axios.get(\"http://localhost:8182/customerBook/getall\").then((response) => {\n//       this.setState({ customerBook: response.data });\n//     });\n//   };\n\n//   handleDelete = (bookId) => {\n//     console.log(\"Deleting book with ID:\", bookId);\n\n//     axios\n//       .delete(`http://localhost:8182/Book/delete/${bookId}`)\n//       .then((response) => {\n//         console.log(response.data);\n//         this.setState({ delBook: response.data });\n//       })\n//       .catch((error) => {\n//         console.error(\"Error deleting book:\", error);\n//       });\n//   };\n\n//   render() {\n//     const { book, customer, customerBook } = this.state;\n\n//     return (\n//       <div>\n//         <AdminNavbar />\n//         <Container className=\"mt-5\">\n//           <h1 className=\"text-center\">Admin Dashboard</h1>\n//           <Button onClick={this.handleAllCustomers}>Get All Customers</Button>\n//           <Button onClick={this.handleAllCustomerBooks}>Get All Bookings</Button>\n\n//           <Row className=\"justify-content-md-center\">\n//             <Col className=\"col-md-3 mb-3\">\n//               {book.map((b, index) => (\n//                 <div key={index} className=\"col-md-4 mb-4\">\n//                   <Card style={{ width: \"400px\", border: \"1px solid #dee2e6\", borderRadius: \"0.25rem\" }}>\n//                     <Card.Body>\n//                       <Link to={`/books?id=${b.id}`}>\n//                         <Card.Title>{b.bookTitle}</Card.Title>\n//                       </Link>\n//                       <hr />\n//                       <div>\n//                         <div style={{ display: \"flex\", flexDirection: \"column\", marginBottom: \"10px\" }}>\n//                           <div>\n//                             <span style={{ fontWeight: \"bold\" }}>Rating:</span> {b.rating}\n//                           </div>\n//                           <div>\n//                             <span style={{ fontWeight: \"bold\" }}>Author:</span>\n//                             <Link to={`/authors?id=${b.id}`}>{b.author}</Link>\n//                           </div>\n//                           <div>\n//                             <span style={{ fontWeight: \"bold\" }}>Price:</span> {b.bookPrice}\n//                           </div>\n//                         </div>\n//                         <Button\n//                           onClick={() => this.props.history.push(`/admin/update/${b.id}`)}\n//                           style={{ width: 200, alignSelf: \"center\", margin: 15 }}\n//                           variant=\"outline-primary\"\n//                         >\n//                           UPDATE\n//                         </Button>\n//                         <Button\n//                           onClick={() => this.handleDelete(b.id)}\n//                           style={{ width: 200, alignSelf: \"center\", margin: 15 }}\n//                           variant=\"outline-primary\"\n//                         >\n//                           DELETE\n//                         </Button>\n//                       </div>\n//                     </Card.Body>\n//                   </Card>\n//                 </div>\n//               ))}\n//             </Col>\n\n//             <Col className=\"col-md-3 mb-3\">\n//               {customer.map((c, index) => (\n//                 <div key={index} className=\"col-md-4 mb-4\">\n//                   <Card style={{ width: \"400px\", border: \"1px solid #dee2e6\", borderRadius: \"0.25rem\" }}>\n//                     <Card.Body>\n//                       <Card.Title>{c.name}</Card.Title>\n//                       <hr />\n//                       <div>\n//                         <div style={{ display: \"flex\", flexDirection: \"column\", marginBottom: \"10px\" }}>\n//                           <div>\n//                             <span style={{ fontWeight: \"bold\" }}>Contact:</span> {c.contact}\n//                           </div>\n//                         </div>\n//                       </div>\n//                     </Card.Body>\n//                   </Card>\n//                 </div>\n//               ))}\n//             </Col>\n\n//             <Col className=\"col-md-3 mb-3\">\n//               {customerBook.map((cb, index) => (\n//                 <div key={index} className=\"col-md-4 mb-4\">\n//                   <Card style={{ width: \"400px\", border: \"1px solid #dee2e6\", borderRadius: \"0.25rem\" }}>\n//                     <Card.Body>\n//                       <Card.Title>{cb.customer.name}</Card.Title>\n//                       <hr />\n//                       <div>\n//                         <div style={{ display: \"flex\", flexDirection: \"column\", marginBottom: \"10px\" }}>\n//                           <div>\n//                             <span style={{ fontWeight: \"bold\" }}>IssueDate:</span> {cb.issueDate}\n//                           </div>\n//                         </div>\n//                       </div>\n//                     </Card.Body>\n//                   </Card>\n//                 </div>\n//               ))}\n//             </Col>\n//           </Row>\n//         </Container>\n//       </div>\n//     );\n//   }\n// }\n\n// export default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Card","Button","useNavigate","useParams","AdminNavbar","jsxDEV","_jsxDEV","AdminDashboard","_s","id","books","setBooks","customers","setCustomers","customerBookings","setCustomerBookings","showBooks","setShowBooks","showCustomers","setShowCustomers","showCustomerBookings","setShowCustomerBookings","navigate","dispatch","useDispatch","list","useSelector","state","book","fetchBooks","fetchCustomers","fetchCustomerBookings","getBooks","response","get","data","error","console","message","navigateToAddBook","navigateToUpdateBook","bookId","handleDeleteBook","delete","renderUniqueBooks","uniqueBooks","bookIds","Set","has","push","add","renderUniqueCustomers","uniqueCustomers","customerIds","customer","renderUniqueCustomerBookings","uniqueCustomerBookings","bookingIds","booking","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","length","map","style","width","Body","Title","bookTitle","Text","author","bookPrice","isbn","variant","name","city","contact","issueDate","returnDate","amount","_c","$RefreshReg$"],"sources":["C:/JAVA react/react_ui/library/library/src/components/Admin/dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport AdminNavbar from \"./adminnavbar\";\r\n\r\nfunction AdminDashboard() {\r\n  const {id}=useParams();\r\n  const [books, setBooks] = useState([]);\r\n  const [customers, setCustomers] = useState([]);\r\n  const [customerBookings, setCustomerBookings] = useState([]);\r\n  const [showBooks, setShowBooks] = useState(false);\r\n  const [showCustomers, setShowCustomers] = useState(false);\r\n  const [showCustomerBookings, setShowCustomerBookings] = useState(false);\r\n  const navigate = useNavigate(); // Use navigate hook for navigation\r\n  const dispatch = useDispatch();\r\n  let { list } = useSelector((state) => state.book);\r\n  useEffect(() => {\r\n    // Fetch data when component mounts\r\n    fetchBooks();\r\n    fetchCustomers();\r\n    fetchCustomerBookings();\r\n  }, []);\r\n\r\n  // const fetchBooks = async () => {\r\n  //   try {\r\n  //     const response = await axios.get(\"http://localhost:8182/Book/all\");\r\n  //     setBooks(response.data);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error fetching books:\", error.message);\r\n  //   }\r\n  // };\r\n  useEffect(() => {\r\n    dispatch(getBooks()); // Change 'getAdmissions' to 'getBooks'\r\n  }, [dispatch]);\r\n\r\n  \r\n\r\n\r\n  const fetchCustomers = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8182/customer/getall\");\r\n      setCustomers(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching customers:\", error.message);\r\n    }\r\n  };\r\n\r\n  const fetchCustomerBookings = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8182/customerBook/getall\");\r\n      setCustomerBookings(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching customer bookings:\", error.message);\r\n    }\r\n  };\r\n\r\n  const navigateToAddBook = () => {\r\n    navigate(`/admin/add/${id}`);\r\n  };\r\n\r\n  const navigateToUpdateBook = (bookId) => {\r\n    navigate(`/admin/update/${bookId}`);\r\n  };\r\n  const handleDeleteBook = async (bookId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:8182/Book/delete/${bookId}`);\r\n      // Refresh the books list after deletion\r\n      fetchBooks();\r\n    } catch (error) {\r\n      console.error(\"Error deleting book:\", error.message);\r\n    }\r\n  };\r\n  const renderUniqueBooks = (books) => {\r\n    const uniqueBooks = [];\r\n    const bookIds = new Set();\r\n\r\n    for (const book of books) {\r\n      if (!bookIds.has(book.id)) {\r\n        uniqueBooks.push(book);\r\n        bookIds.add(book.id);\r\n      }\r\n    }\r\n\r\n    return uniqueBooks;\r\n  };\r\n\r\n  const renderUniqueCustomers = (customers) => {\r\n    const uniqueCustomers = [];\r\n    const customerIds = new Set();\r\n\r\n    for (const customer of customers) {\r\n      if (!customerIds.has(customer.id)) {\r\n        uniqueCustomers.push(customer);\r\n        customerIds.add(customer.id);\r\n      }\r\n    }\r\n\r\n    return uniqueCustomers;\r\n  };\r\n\r\n  const renderUniqueCustomerBookings = (customerBookings) => {\r\n    const uniqueCustomerBookings = [];\r\n    const bookingIds = new Set();\r\n\r\n    for (const booking of customerBookings) {\r\n      if (!bookingIds.has(booking.id)) {\r\n        uniqueCustomerBookings.push(booking);\r\n        bookingIds.add(booking.id);\r\n      }\r\n    }\r\n\r\n    return uniqueCustomerBookings;\r\n  };\r\n \r\n\r\n  return (\r\n    <div>\r\n      <AdminNavbar />\r\n\r\n      <div className=\"container mt-5\">\r\n        <h1 className=\"mb-4\">Admin Dashboard</h1>\r\n\r\n        <button\r\n          className={`btn ${showBooks ? \"btn-danger\" : \"btn-success\"} mb-2`}\r\n          onClick={() => setShowBooks(!showBooks)}\r\n        >\r\n          {showBooks ? `Hide Books (${books.length})` : `Show Books (${books.length})`}\r\n        </button>\r\n\r\n        {showBooks && (\r\n          <div className=\"d-flex flex-wrap\">\r\n            {books.map((book) => (\r\n              <Card key={book.id} className=\"m-2\" style={{ width: \"18rem\" }}>\r\n                <Card.Body>\r\n                  <Card.Title>{book.bookTitle}</Card.Title>\r\n                  <Card.Text>\r\n                    <strong>Author:</strong> {book.author}\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <strong>Price:</strong> {book.bookPrice}\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <strong>ISBN:</strong> {book.isbn}\r\n                  </Card.Text>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    className=\"mr-2\"\r\n                    onClick={() => navigateToAddBook()}\r\n                  >\r\n                    ADD\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"info\"\r\n                    onClick={() => navigateToUpdateBook(book.id)}\r\n                  >\r\n                    UPDATE\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => handleDeleteBook(book.id)}\r\n                  >\r\n                    DELETE\r\n                  </Button>\r\n                 \r\n                </Card.Body>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        &nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n        <button\r\n          className={`btn ${showCustomers ? \"btn-danger\" : \"btn-success\"} mb-2 ml-2`}\r\n          onClick={() => setShowCustomers(!showCustomers)}\r\n        >\r\n          {showCustomers ? `Hide Customers (${customers.length})` : `Show Customers (${customers.length})`}\r\n        </button>\r\n\r\n        {showCustomers && (\r\n          <div className=\"d-flex flex-wrap\">\r\n            {customers.map((customer) => (\r\n              <Card key={customer.id} className=\"m-2\" style={{ width: \"18rem\" }}>\r\n                <Card.Body>\r\n                  <Card.Title>{customer.name}</Card.Title>\r\n                  <Card.Text>\r\n                    <strong>City:</strong> {customer.city}\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <strong>Contact:</strong> {customer.contact}\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        &nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n        <button\r\n          className={`btn ${showCustomerBookings ? \"btn-danger\" : \"btn-success\"} mb-2 ml-2`}\r\n          onClick={() => setShowCustomerBookings(!showCustomerBookings)}\r\n        >\r\n          {showCustomerBookings ? \"Hide Customer Bookings\" : \"Show Customer Bookings\"}\r\n        </button>\r\n\r\n        {showCustomerBookings && (\r\n          <div className=\"d-flex flex-wrap\">\r\n            {renderUniqueCustomerBookings(customerBookings).map((booking) => (\r\n              <Card key={booking.id} className=\"m-2\" style={{ width: \"18rem\" }}>\r\n                \r\n                <Card.Body>\r\n                  <Card.Title>{booking.customer ? booking.customer.name : \"\"}</Card.Title>\r\n                  <Card.Text>\r\n                    <strong>Issue Date:</strong> {booking.issueDate}\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <strong>Return Date:</strong> {booking.returnDate}\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <strong>Fine Amount:</strong> {booking.amount}\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <strong>Book id:</strong> {booking.id}\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n// import { Button, Card, Row, Container, Col } from \"react-bootstrap\";\r\n// import axios from \"axios\";\r\n// import { Link } from \"react-router-dom\";\r\n// import AdminNavbar from \"./adminnavbar\";\r\n// import UpdateComponent from \"./update\";\r\n\r\n// class AdminDashboard extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       book: [],\r\n//       customer: [],\r\n//       customerBook: [],\r\n//       delBook: [],\r\n//     };\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.fetchBooks();\r\n//   }\r\n\r\n//   fetchBooks() {\r\n//     axios.get(\"http://localhost:8182/Book/all\").then((response) => {\r\n//       this.setState({ book: response.data });\r\n//     });\r\n//   }\r\n\r\n//   handleAllCustomers = () => {\r\n//     axios.get(\"http://localhost:8182/customer/getall\").then((response) => {\r\n//       this.setState({ customer: response.data });\r\n//     });\r\n//   };\r\n\r\n//   handleAllCustomerBooks = () => {\r\n//     axios.get(\"http://localhost:8182/customerBook/getall\").then((response) => {\r\n//       this.setState({ customerBook: response.data });\r\n//     });\r\n//   };\r\n\r\n//   handleDelete = (bookId) => {\r\n//     console.log(\"Deleting book with ID:\", bookId);\r\n\r\n//     axios\r\n//       .delete(`http://localhost:8182/Book/delete/${bookId}`)\r\n//       .then((response) => {\r\n//         console.log(response.data);\r\n//         this.setState({ delBook: response.data });\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Error deleting book:\", error);\r\n//       });\r\n//   };\r\n\r\n//   render() {\r\n//     const { book, customer, customerBook } = this.state;\r\n\r\n//     return (\r\n//       <div>\r\n//         <AdminNavbar />\r\n//         <Container className=\"mt-5\">\r\n//           <h1 className=\"text-center\">Admin Dashboard</h1>\r\n//           <Button onClick={this.handleAllCustomers}>Get All Customers</Button>\r\n//           <Button onClick={this.handleAllCustomerBooks}>Get All Bookings</Button>\r\n\r\n//           <Row className=\"justify-content-md-center\">\r\n//             <Col className=\"col-md-3 mb-3\">\r\n//               {book.map((b, index) => (\r\n//                 <div key={index} className=\"col-md-4 mb-4\">\r\n//                   <Card style={{ width: \"400px\", border: \"1px solid #dee2e6\", borderRadius: \"0.25rem\" }}>\r\n//                     <Card.Body>\r\n//                       <Link to={`/books?id=${b.id}`}>\r\n//                         <Card.Title>{b.bookTitle}</Card.Title>\r\n//                       </Link>\r\n//                       <hr />\r\n//                       <div>\r\n//                         <div style={{ display: \"flex\", flexDirection: \"column\", marginBottom: \"10px\" }}>\r\n//                           <div>\r\n//                             <span style={{ fontWeight: \"bold\" }}>Rating:</span> {b.rating}\r\n//                           </div>\r\n//                           <div>\r\n//                             <span style={{ fontWeight: \"bold\" }}>Author:</span>\r\n//                             <Link to={`/authors?id=${b.id}`}>{b.author}</Link>\r\n//                           </div>\r\n//                           <div>\r\n//                             <span style={{ fontWeight: \"bold\" }}>Price:</span> {b.bookPrice}\r\n//                           </div>\r\n//                         </div>\r\n//                         <Button\r\n//                           onClick={() => this.props.history.push(`/admin/update/${b.id}`)}\r\n//                           style={{ width: 200, alignSelf: \"center\", margin: 15 }}\r\n//                           variant=\"outline-primary\"\r\n//                         >\r\n//                           UPDATE\r\n//                         </Button>\r\n//                         <Button\r\n//                           onClick={() => this.handleDelete(b.id)}\r\n//                           style={{ width: 200, alignSelf: \"center\", margin: 15 }}\r\n//                           variant=\"outline-primary\"\r\n//                         >\r\n//                           DELETE\r\n//                         </Button>\r\n//                       </div>\r\n//                     </Card.Body>\r\n//                   </Card>\r\n//                 </div>\r\n//               ))}\r\n//             </Col>\r\n\r\n//             <Col className=\"col-md-3 mb-3\">\r\n//               {customer.map((c, index) => (\r\n//                 <div key={index} className=\"col-md-4 mb-4\">\r\n//                   <Card style={{ width: \"400px\", border: \"1px solid #dee2e6\", borderRadius: \"0.25rem\" }}>\r\n//                     <Card.Body>\r\n//                       <Card.Title>{c.name}</Card.Title>\r\n//                       <hr />\r\n//                       <div>\r\n//                         <div style={{ display: \"flex\", flexDirection: \"column\", marginBottom: \"10px\" }}>\r\n//                           <div>\r\n//                             <span style={{ fontWeight: \"bold\" }}>Contact:</span> {c.contact}\r\n//                           </div>\r\n//                         </div>\r\n//                       </div>\r\n//                     </Card.Body>\r\n//                   </Card>\r\n//                 </div>\r\n//               ))}\r\n//             </Col>\r\n\r\n//             <Col className=\"col-md-3 mb-3\">\r\n//               {customerBook.map((cb, index) => (\r\n//                 <div key={index} className=\"col-md-4 mb-4\">\r\n//                   <Card style={{ width: \"400px\", border: \"1px solid #dee2e6\", borderRadius: \"0.25rem\" }}>\r\n//                     <Card.Body>\r\n//                       <Card.Title>{cb.customer.name}</Card.Title>\r\n//                       <hr />\r\n//                       <div>\r\n//                         <div style={{ display: \"flex\", flexDirection: \"column\", marginBottom: \"10px\" }}>\r\n//                           <div>\r\n//                             <span style={{ fontWeight: \"bold\" }}>IssueDate:</span> {cb.issueDate}\r\n//                           </div>\r\n//                         </div>\r\n//                       </div>\r\n//                     </Card.Body>\r\n//                   </Card>\r\n//                 </div>\r\n//               ))}\r\n//             </Col>\r\n//           </Row>\r\n//         </Container>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default AdminDashboard;\r\n"],"mappings":"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},"metadata":{},"sourceType":"module","externalDependencies":[]}