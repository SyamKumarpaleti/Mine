{"ast":null,"code":"var _jsxFileName = \"C:\\\\JAVA react\\\\react_ui\\\\library\\\\library\\\\src\\\\components\\\\Admin\\\\dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { Card, Button, Form } from \"react-bootstrap\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import AdminNavbar from \"./adminnavbar\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// function AdminDashboard() {\n//   const { id } = useParams();\n//   const [books, setBooks] = useState([]);\n//   const [customers, setCustomers] = useState([]);\n//   const [customerBookings, setCustomerBookings] = useState([]);\n//   const [showBooks, setShowBooks] = useState(false);\n//   const [showCustomers, setShowCustomers] = useState(false);\n//   const [showCustomerBookings, setShowCustomerBookings] = useState(false);\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     fetchBooks();\n//     fetchCustomers();\n//     fetchCustomerBookings();\n//   }, []);\n\n//   const fetchBooks = async () => {\n//     try {\n//       const response = await axios.get(\"http://localhost:8182/Book/all\");\n//       setBooks(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching books:\", error.message);\n//     }\n//   };\n\n//   const fetchCustomers = async () => {\n//     try {\n//       const response = await axios.get(\"http://localhost:8182/customer/getall\");\n//       setCustomers(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching customers:\", error.message);\n//     }\n//   };\n\n//   const fetchCustomerBookings = async () => {\n//     try {\n//       const response = await axios.get(\"http://localhost:8182/customerBook/getall\");\n//       setCustomerBookings(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching customer bookings:\", error.message);\n//     }\n//   };\n\n//   const navigateToUpdateBook = (bookId) => {\n//     navigate(`/admin/update/${bookId}`);\n//   };\n\n//   const handleDeleteBook = async (bookId) => {\n//     try {\n//       await axios.delete(`http://localhost:8182/Book/delete/${bookId}`);\n//       fetchBooks();\n//     } catch (error) {\n//       console.error(\"Error deleting book:\", error.message);\n//     }\n//   };\n\n//   const renderUniqueCustomerBookings = (customerBookings) => {\n//     const uniqueCustomerBookings = [];\n//     const bookingIds = new Set();\n\n//     for (const booking of customerBookings) {\n//       if (!bookingIds.has(booking.id)) {\n//         uniqueCustomerBookings.push(booking);\n//         bookingIds.add(booking.id);\n//       }\n//     }\n\n//     return uniqueCustomerBookings;\n//   };\n\n//   const filterData = (data, query) => {\n//     const lowercaseQuery = query.toLowerCase();\n//     return data.filter(item => {\n//       return (\n//         (item.bookTitle && item.bookTitle.toLowerCase().includes(lowercaseQuery)) ||\n//         (item.author && item.author.toLowerCase().includes(lowercaseQuery)) ||\n//         (item.name && item.name.toLowerCase().includes(lowercaseQuery)) ||\n//         (item.city && item.city.toLowerCase().includes(lowercaseQuery)) ||\n//         (item.contact && item.contact.toLowerCase().includes(lowercaseQuery)) ||\n//         (item.issueDate && item.issueDate.toLowerCase().includes(lowercaseQuery)) ||\n//         (item.returnDate && item.returnDate.toLowerCase().includes(lowercaseQuery)) ||\n//         (item.amount && item.amount.toString().toLowerCase().includes(lowercaseQuery)) ||\n//         (item.isbn && item.isbn.toLowerCase().includes(lowercaseQuery))\n//       );\n//     });\n//   };\n\n//   const filteredBooks = filterData(books, searchQuery);\n//   const filteredCustomers = filterData(customers, searchQuery);\n//   const filteredCustomerBookings = filterData(customerBookings, searchQuery);\n\n//   const shouldShowBooks = showBooks || searchQuery !== '';\n// const shouldShowCustomers = showCustomers || searchQuery !== '';\n\n//   return (\n//     <div style={{ backgroundColor: \"#15202B\", minHeight: \"100vh\", color: \"#FFFFFF\", fontFamily: \"Arial, sans-serif\" }}>\n//       <AdminNavbar />\n\n//       <div className=\"container mt-5\">\n//       <h1 className=\"mb-4 text-center\" style={{ color: \"#61dafb\", fontSize: \"3.5rem\" }}>Admin Dashboard</h1>\n\n//         <Form.Group controlId=\"formSearch\">\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Search...\"\n//             value={searchQuery}\n//             onChange={(e) => setSearchQuery(e.target.value)}\n//             style={{ fontSize: \"1.2rem\" }}\n//           />\n//         </Form.Group>\n//         <br />\n\n//         <div className=\"text-center\">\n//           <button\n//             className={`btn btn-${showBooks ? \"danger\" : \"success\"} mb-2 mx-2`}\n//             onClick={() => setShowBooks(!showBooks)}\n//             style={{ fontSize: \"1.2rem\" }}\n//           >\n//             {showBooks ? `Hide Books (${filteredBooks.length})` : `Show Books (${filteredBooks.length})`}\n//           </button>\n\n//           <button\n//             className={`btn btn-${showCustomers ? \"danger\" : \"success\"} mb-2 mx-2`}\n//             onClick={() => setShowCustomers(!showCustomers)}\n//             style={{ fontSize: \"1.2rem\" }}\n//           >\n//             {showCustomers ? `Hide Customers (${filteredCustomers.length})` : `Show Customers (${filteredCustomers.length})`}\n//           </button>\n\n//           <button\n//             className={`btn ${showCustomerBookings ? \"btn-danger\" : \"btn-success\"} mb-2 mx-2`}\n//             onClick={() => setShowCustomerBookings(!showCustomerBookings)}\n//             style={{ fontSize: \"1.2rem\" }}\n//           >\n//             {showCustomerBookings ? \"Hide Customer Bookings\" : \"Show Customer Bookings\"}\n//           </button>\n//         </div>\n\n//         {shouldShowBooks && (\n//           <div className=\"d-flex flex-wrap justify-content-center\">\n//             {filteredBooks.map((book) => (\n//               <Card key={book.id} className=\"m-2\" style={{ width: \"22rem\", backgroundColor: \"#343a40\", color: \"#FFFFFF\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\n//                 <Card.Body>\n//                   <Card.Title style={{ color: \"#61dafb\", fontSize: \"1.5rem\" }}>{book.bookTitle}</Card.Title>\n//                   <Card.Text><strong>Author:</strong> {book.author}</Card.Text>\n//                   <Card.Text><strong>Price:</strong> {book.bookPrice}</Card.Text>\n//                   <Card.Text><strong>ISBN:</strong> {book.isbn}</Card.Text>\n//                   <Button variant=\"info\" onClick={() => navigateToUpdateBook(book.id)} style={{ fontSize: \"1.2rem\" }}>\n//                     UPDATE\n//                   </Button> &nbsp;\n//                   <Button variant=\"danger\" onClick={() => handleDeleteBook(book.id)} style={{ fontSize: \"1.2rem\" }}>\n//                     DELETE\n//                   </Button>\n//                 </Card.Body>\n//               </Card>\n//             ))}\n//           </div>\n//         )}\n\n//         {shouldShowCustomers && (\n//           <div className=\"d-flex flex-wrap justify-content-center\">\n//             {filteredCustomers.map((customer) => (\n//               <Card key={customer.id} className=\"m-2\" style={{ width: \"18rem\", backgroundColor: \"#343a40\", color: \"#FFFFFF\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\n//                 <Card.Body>\n//                   <Card.Title style={{ color: \"#61dafb\", fontSize: \"1.5rem\" }}>{customer.name}</Card.Title>\n//                   <Card.Text><strong>City:</strong> {customer.city}</Card.Text>\n//                   <Card.Text><strong>Contact:</strong> {customer.contact}</Card.Text>\n//                 </Card.Body>\n//               </Card>\n//             ))}\n//           </div>\n//         )}\n//         {showCustomerBookings && (\n//           <div className=\"d-flex flex-wrap\">\n//             {renderUniqueCustomerBookings(customerBookings).map((booking) => (\n//               <Card key={booking.id} className=\"m-2\" style={{ width: \"18rem\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\n//                 <Card.Body>\n//                   <Card.Title className=\"custom-card-title\" style={{ fontWeight: \"bold\" }}>\n//                     {booking.customer ? booking.customer.name : \" \"}\n//                   </Card.Title>\n\n//                   <Card.Text className=\"custom-card-text\" style={{ fontSize: \"1rem\" }}>\n//                     <strong>Book Title:</strong> {booking.book.bookTitle}\n//                   </Card.Text>\n//                   <Card.Text style={{ fontSize: \"1.2rem\", color: \"#495057\" }}>\n//                     <strong>Issue Date:</strong> {booking.issueDate}\n//                   </Card.Text>\n//                   <Card.Text style={{ fontSize: \"1.2rem\", color: \"#495057\" }}>\n//                     <strong>Return Date:</strong> {booking.returnDate}\n//                   </Card.Text>\n//                   <Card.Text style={{ fontSize: \"1.2rem\", color: \"#ff4500\" }}>\n//                     <strong>Fine Amount:</strong> ${booking.amount.toFixed(2)}\n//                   </Card.Text>\n//                 </Card.Body>\n//               </Card>\n//             ))}\n//           </div>\n//         )}\n\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default AdminDashboard;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card, Button, Form } from \"react-bootstrap\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport AdminNavbar from \"./adminnavbar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [books, setBooks] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [customerBookings, setCustomerBookings] = useState([]);\n  const [showBooks, setShowBooks] = useState(false);\n  const [showCustomers, setShowCustomers] = useState(false);\n  const [showCustomerBookings, setShowCustomerBookings] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchBooks();\n    fetchCustomers();\n    fetchCustomerBookings();\n  }, []);\n  const fetchBooks = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8182/Book/all\");\n      setBooks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching books:\", error.message);\n    }\n  };\n  const fetchCustomers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8182/customer/getall\");\n      setCustomers(response.data);\n    } catch (error) {\n      console.error(\"Error fetching customers:\", error.message);\n    }\n  };\n  const fetchCustomerBookings = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8182/customerBook/getall\");\n      setCustomerBookings(response.data);\n    } catch (error) {\n      console.error(\"Error fetching customer bookings:\", error.message);\n    }\n  };\n  const navigateToUpdateBook = bookId => {\n    navigate(`/admin/update/${bookId}`);\n  };\n  const handleDeleteBook = async bookId => {\n    try {\n      await axios.delete(`http://localhost:8182/Book/delete/${bookId}`);\n      fetchBooks();\n    } catch (error) {\n      console.error(\"Error deleting book:\", error.message);\n    }\n  };\n  const renderUniqueCustomerBookings = customerBookings => {\n    const uniqueCustomerBookings = [];\n    const bookingIds = new Set();\n    for (const booking of customerBookings) {\n      if (!bookingIds.has(booking.id)) {\n        uniqueCustomerBookings.push(booking);\n        bookingIds.add(booking.id);\n      }\n    }\n    return uniqueCustomerBookings;\n  };\n  const renderCustomerDropdown = customer => {\n    const customerBookings = customerBookings.filter(booking => booking.customer.id === customer.id);\n    if (customerBookings.length > 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleBookSelection(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Book\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), customerBookings.map(booking => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: booking.book.id,\n            children: booking.book.bookTitle\n          }, booking.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  const handleBookSelection = selectedBookId => {\n    // Implement logic to handle book selection and display corresponding details\n    // You can use this function to set state variables for issue date, return date, and price\n    // based on the selected book ID.\n  };\n  const filteredBooks = filterData(books, searchQuery);\n  const filteredCustomers = filterData(customers, searchQuery);\n  const filteredCustomerBookings = filterData(customerBookings, searchQuery);\n  const shouldShowBooks = showBooks || searchQuery !== '';\n  const shouldShowCustomers = showCustomers || searchQuery !== '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#15202B\",\n      minHeight: \"100vh\",\n      color: \"#FFFFFF\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(AdminNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-4 text-center\",\n        style: {\n          color: \"#61dafb\",\n          fontSize: \"3.5rem\"\n        },\n        children: \"Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formSearch\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Search...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          style: {\n            fontSize: \"1.2rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn btn-${shouldShowBooks ? \"danger\" : \"success\"} mb-2 mx-2`,\n          onClick: () => setShowBooks(!showBooks),\n          style: {\n            fontSize: \"1.2rem\"\n          },\n          children: shouldShowBooks ? `Hide Books (${filteredBooks.length})` : `Show Books (${filteredBooks.length})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn btn-${shouldShowCustomers ? \"danger\" : \"success\"} mb-2 mx-2`,\n          onClick: () => setShowCustomers(!showCustomers),\n          style: {\n            fontSize: \"1.2rem\"\n          },\n          children: shouldShowCustomers ? `Hide Customers (${filteredCustomers.length})` : `Show Customers (${filteredCustomers.length})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${showCustomerBookings ? \"btn-danger\" : \"btn-success\"} mb-2 mx-2`,\n          onClick: () => setShowCustomerBookings(!showCustomerBookings),\n          style: {\n            fontSize: \"1.2rem\"\n          },\n          children: showCustomerBookings ? \"Hide Customer Bookings\" : \"Show Customer Bookings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), shouldShowBooks && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap justify-content-center\",\n        children: filteredBooks.map(book => /*#__PURE__*/_jsxDEV(Card, {\n          className: \"m-2\",\n          style: {\n            width: \"22rem\",\n            backgroundColor: \"#343a40\",\n            color: \"#FFFFFF\",\n            boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              style: {\n                color: \"#61dafb\",\n                fontSize: \"1.5rem\"\n              },\n              children: book.bookTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Author:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 30\n              }, this), \" \", book.author]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Price:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 30\n              }, this), \" \", book.bookPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"ISBN:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 30\n              }, this), \" \", book.isbn]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"info\",\n              onClick: () => navigateToUpdateBook(book.id),\n              style: {\n                fontSize: \"1.2rem\"\n              },\n              children: \"UPDATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 19\n            }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => handleDeleteBook(book.id),\n              style: {\n                fontSize: \"1.2rem\"\n              },\n              children: \"DELETE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this)\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this), shouldShowCustomers && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap justify-content-center\",\n        children: filteredCustomers.map(customer => /*#__PURE__*/_jsxDEV(Card, {\n          className: \"m-2\",\n          style: {\n            width: \"18rem\",\n            backgroundColor: \"#343a40\",\n            color: \"#FFFFFF\",\n            boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              style: {\n                color: \"#61dafb\",\n                fontSize: \"1.5rem\"\n              },\n              children: customer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"City:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 30\n              }, this), \" \", customer.city]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Contact:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 30\n              }, this), \" \", customer.contact]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 19\n            }, this), renderCustomerDropdown(customer)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 17\n          }, this)\n        }, customer.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this), showCustomerBookings && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap\",\n        children: renderUniqueCustomerBookings(customerBookings).map(booking => /*#__PURE__*/_jsxDEV(Card, {\n          className: \"m-2\",\n          style: {\n            width: \"18rem\",\n            boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              className: \"custom-card-title\",\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: booking.customer ? booking.customer.name : \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 19\n            }, this), renderCustomerDropdown(booking.customer), /*#__PURE__*/_jsxDEV(Card.Text, {\n              className: \"custom-card-text\",\n              style: {\n                fontSize: \"1rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Book Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 21\n              }, this), \" \", booking.book.bookTitle]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              style: {\n                fontSize: \"1.2rem\",\n                color: \"#495057\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Issue Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 21\n              }, this), \" \", booking.issueDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              style: {\n                fontSize: \"1.2rem\",\n                color: \"#495057\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Return Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 21\n              }, this), \" \", booking.returnDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              style: {\n                fontSize: \"1.2rem\",\n                color: \"#ff4500\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Fine Amount:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 21\n              }, this), \" $\", booking.amount.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 17\n          }, this)\n        }, booking.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"2u3jIeoahkuQY+kBGYHJHIvnVh0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Card","Button","Form","useNavigate","useParams","AdminNavbar","jsxDEV","_jsxDEV","AdminDashboard","_s","id","books","setBooks","customers","setCustomers","customerBookings","setCustomerBookings","showBooks","setShowBooks","showCustomers","setShowCustomers","showCustomerBookings","setShowCustomerBookings","searchQuery","setSearchQuery","navigate","fetchBooks","fetchCustomers","fetchCustomerBookings","response","get","data","error","console","message","navigateToUpdateBook","bookId","handleDeleteBook","delete","renderUniqueCustomerBookings","uniqueCustomerBookings","bookingIds","Set","booking","has","push","add","renderCustomerDropdown","customer","filter","length","children","onChange","e","handleBookSelection","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","book","bookTitle","selectedBookId","filteredBooks","filterData","filteredCustomers","filteredCustomerBookings","shouldShowBooks","shouldShowCustomers","style","backgroundColor","minHeight","color","fontFamily","className","fontSize","Group","controlId","Control","type","placeholder","onClick","width","boxShadow","Body","Title","Text","author","bookPrice","isbn","variant","name","city","contact","fontWeight","issueDate","returnDate","amount","toFixed","_c","$RefreshReg$"],"sources":["C:/JAVA react/react_ui/library/library/src/components/Admin/dashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Card, Button, Form } from \"react-bootstrap\";\r\n// import { useNavigate, useParams } from \"react-router-dom\";\r\n// import AdminNavbar from \"./adminnavbar\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n// function AdminDashboard() {\r\n//   const { id } = useParams();\r\n//   const [books, setBooks] = useState([]);\r\n//   const [customers, setCustomers] = useState([]);\r\n//   const [customerBookings, setCustomerBookings] = useState([]);\r\n//   const [showBooks, setShowBooks] = useState(false);\r\n//   const [showCustomers, setShowCustomers] = useState(false);\r\n//   const [showCustomerBookings, setShowCustomerBookings] = useState(false);\r\n//   const [searchQuery, setSearchQuery] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     fetchBooks();\r\n//     fetchCustomers();\r\n//     fetchCustomerBookings();\r\n//   }, []);\r\n\r\n//   const fetchBooks = async () => {\r\n//     try {\r\n//       const response = await axios.get(\"http://localhost:8182/Book/all\");\r\n//       setBooks(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching books:\", error.message);\r\n//     }\r\n//   };\r\n\r\n//   const fetchCustomers = async () => {\r\n//     try {\r\n//       const response = await axios.get(\"http://localhost:8182/customer/getall\");\r\n//       setCustomers(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching customers:\", error.message);\r\n//     }\r\n//   };\r\n\r\n//   const fetchCustomerBookings = async () => {\r\n//     try {\r\n//       const response = await axios.get(\"http://localhost:8182/customerBook/getall\");\r\n//       setCustomerBookings(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching customer bookings:\", error.message);\r\n//     }\r\n//   };\r\n\r\n//   const navigateToUpdateBook = (bookId) => {\r\n//     navigate(`/admin/update/${bookId}`);\r\n//   };\r\n\r\n//   const handleDeleteBook = async (bookId) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:8182/Book/delete/${bookId}`);\r\n//       fetchBooks();\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting book:\", error.message);\r\n//     }\r\n//   };\r\n\r\n//   const renderUniqueCustomerBookings = (customerBookings) => {\r\n//     const uniqueCustomerBookings = [];\r\n//     const bookingIds = new Set();\r\n\r\n//     for (const booking of customerBookings) {\r\n//       if (!bookingIds.has(booking.id)) {\r\n//         uniqueCustomerBookings.push(booking);\r\n//         bookingIds.add(booking.id);\r\n//       }\r\n//     }\r\n\r\n//     return uniqueCustomerBookings;\r\n//   };\r\n\r\n//   const filterData = (data, query) => {\r\n//     const lowercaseQuery = query.toLowerCase();\r\n//     return data.filter(item => {\r\n//       return (\r\n//         (item.bookTitle && item.bookTitle.toLowerCase().includes(lowercaseQuery)) ||\r\n//         (item.author && item.author.toLowerCase().includes(lowercaseQuery)) ||\r\n//         (item.name && item.name.toLowerCase().includes(lowercaseQuery)) ||\r\n//         (item.city && item.city.toLowerCase().includes(lowercaseQuery)) ||\r\n//         (item.contact && item.contact.toLowerCase().includes(lowercaseQuery)) ||\r\n//         (item.issueDate && item.issueDate.toLowerCase().includes(lowercaseQuery)) ||\r\n//         (item.returnDate && item.returnDate.toLowerCase().includes(lowercaseQuery)) ||\r\n//         (item.amount && item.amount.toString().toLowerCase().includes(lowercaseQuery)) ||\r\n//         (item.isbn && item.isbn.toLowerCase().includes(lowercaseQuery))\r\n//       );\r\n//     });\r\n//   };\r\n\r\n//   const filteredBooks = filterData(books, searchQuery);\r\n//   const filteredCustomers = filterData(customers, searchQuery);\r\n//   const filteredCustomerBookings = filterData(customerBookings, searchQuery);\r\n\r\n//   const shouldShowBooks = showBooks || searchQuery !== '';\r\n// const shouldShowCustomers = showCustomers || searchQuery !== '';\r\n\r\n//   return (\r\n//     <div style={{ backgroundColor: \"#15202B\", minHeight: \"100vh\", color: \"#FFFFFF\", fontFamily: \"Arial, sans-serif\" }}>\r\n//       <AdminNavbar />\r\n\r\n//       <div className=\"container mt-5\">\r\n//       <h1 className=\"mb-4 text-center\" style={{ color: \"#61dafb\", fontSize: \"3.5rem\" }}>Admin Dashboard</h1>\r\n\r\n//         <Form.Group controlId=\"formSearch\">\r\n//           <Form.Control\r\n//             type=\"text\"\r\n//             placeholder=\"Search...\"\r\n//             value={searchQuery}\r\n//             onChange={(e) => setSearchQuery(e.target.value)}\r\n//             style={{ fontSize: \"1.2rem\" }}\r\n//           />\r\n//         </Form.Group>\r\n//         <br />\r\n\r\n//         <div className=\"text-center\">\r\n//           <button\r\n//             className={`btn btn-${showBooks ? \"danger\" : \"success\"} mb-2 mx-2`}\r\n//             onClick={() => setShowBooks(!showBooks)}\r\n//             style={{ fontSize: \"1.2rem\" }}\r\n//           >\r\n//             {showBooks ? `Hide Books (${filteredBooks.length})` : `Show Books (${filteredBooks.length})`}\r\n//           </button>\r\n\r\n//           <button\r\n//             className={`btn btn-${showCustomers ? \"danger\" : \"success\"} mb-2 mx-2`}\r\n//             onClick={() => setShowCustomers(!showCustomers)}\r\n//             style={{ fontSize: \"1.2rem\" }}\r\n//           >\r\n//             {showCustomers ? `Hide Customers (${filteredCustomers.length})` : `Show Customers (${filteredCustomers.length})`}\r\n//           </button>\r\n\r\n//           <button\r\n//             className={`btn ${showCustomerBookings ? \"btn-danger\" : \"btn-success\"} mb-2 mx-2`}\r\n//             onClick={() => setShowCustomerBookings(!showCustomerBookings)}\r\n//             style={{ fontSize: \"1.2rem\" }}\r\n//           >\r\n//             {showCustomerBookings ? \"Hide Customer Bookings\" : \"Show Customer Bookings\"}\r\n//           </button>\r\n//         </div>\r\n\r\n//         {shouldShowBooks && (\r\n//           <div className=\"d-flex flex-wrap justify-content-center\">\r\n//             {filteredBooks.map((book) => (\r\n//               <Card key={book.id} className=\"m-2\" style={{ width: \"22rem\", backgroundColor: \"#343a40\", color: \"#FFFFFF\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\r\n//                 <Card.Body>\r\n//                   <Card.Title style={{ color: \"#61dafb\", fontSize: \"1.5rem\" }}>{book.bookTitle}</Card.Title>\r\n//                   <Card.Text><strong>Author:</strong> {book.author}</Card.Text>\r\n//                   <Card.Text><strong>Price:</strong> {book.bookPrice}</Card.Text>\r\n//                   <Card.Text><strong>ISBN:</strong> {book.isbn}</Card.Text>\r\n//                   <Button variant=\"info\" onClick={() => navigateToUpdateBook(book.id)} style={{ fontSize: \"1.2rem\" }}>\r\n//                     UPDATE\r\n//                   </Button> &nbsp;\r\n//                   <Button variant=\"danger\" onClick={() => handleDeleteBook(book.id)} style={{ fontSize: \"1.2rem\" }}>\r\n//                     DELETE\r\n//                   </Button>\r\n//                 </Card.Body>\r\n//               </Card>\r\n//             ))}\r\n//           </div>\r\n//         )}\r\n\r\n//         {shouldShowCustomers && (\r\n//           <div className=\"d-flex flex-wrap justify-content-center\">\r\n//             {filteredCustomers.map((customer) => (\r\n//               <Card key={customer.id} className=\"m-2\" style={{ width: \"18rem\", backgroundColor: \"#343a40\", color: \"#FFFFFF\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\r\n//                 <Card.Body>\r\n//                   <Card.Title style={{ color: \"#61dafb\", fontSize: \"1.5rem\" }}>{customer.name}</Card.Title>\r\n//                   <Card.Text><strong>City:</strong> {customer.city}</Card.Text>\r\n//                   <Card.Text><strong>Contact:</strong> {customer.contact}</Card.Text>\r\n//                 </Card.Body>\r\n//               </Card>\r\n//             ))}\r\n//           </div>\r\n//         )}\r\n//         {showCustomerBookings && (\r\n//           <div className=\"d-flex flex-wrap\">\r\n//             {renderUniqueCustomerBookings(customerBookings).map((booking) => (\r\n//               <Card key={booking.id} className=\"m-2\" style={{ width: \"18rem\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\r\n//                 <Card.Body>\r\n//                   <Card.Title className=\"custom-card-title\" style={{ fontWeight: \"bold\" }}>\r\n//                     {booking.customer ? booking.customer.name : \" \"}\r\n//                   </Card.Title>\r\n\r\n//                   <Card.Text className=\"custom-card-text\" style={{ fontSize: \"1rem\" }}>\r\n//                     <strong>Book Title:</strong> {booking.book.bookTitle}\r\n//                   </Card.Text>\r\n//                   <Card.Text style={{ fontSize: \"1.2rem\", color: \"#495057\" }}>\r\n//                     <strong>Issue Date:</strong> {booking.issueDate}\r\n//                   </Card.Text>\r\n//                   <Card.Text style={{ fontSize: \"1.2rem\", color: \"#495057\" }}>\r\n//                     <strong>Return Date:</strong> {booking.returnDate}\r\n//                   </Card.Text>\r\n//                   <Card.Text style={{ fontSize: \"1.2rem\", color: \"#ff4500\" }}>\r\n//                     <strong>Fine Amount:</strong> ${booking.amount.toFixed(2)}\r\n//                   </Card.Text>\r\n//                 </Card.Body>\r\n//               </Card>\r\n//             ))}\r\n//           </div>\r\n//         )}\r\n\r\n\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminDashboard;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Card, Button, Form } from \"react-bootstrap\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport AdminNavbar from \"./adminnavbar\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction AdminDashboard() {\r\n  const { id } = useParams();\r\n  const [books, setBooks] = useState([]);\r\n  const [customers, setCustomers] = useState([]);\r\n  const [customerBookings, setCustomerBookings] = useState([]);\r\n  const [showBooks, setShowBooks] = useState(false);\r\n  const [showCustomers, setShowCustomers] = useState(false);\r\n  const [showCustomerBookings, setShowCustomerBookings] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchBooks();\r\n    fetchCustomers();\r\n    fetchCustomerBookings();\r\n  }, []);\r\n\r\n  const fetchBooks = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8182/Book/all\");\r\n      setBooks(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching books:\", error.message);\r\n    }\r\n  };\r\n\r\n  const fetchCustomers = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8182/customer/getall\");\r\n      setCustomers(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching customers:\", error.message);\r\n    }\r\n  };\r\n\r\n  const fetchCustomerBookings = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8182/customerBook/getall\");\r\n      setCustomerBookings(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching customer bookings:\", error.message);\r\n    }\r\n  };\r\n\r\n  const navigateToUpdateBook = (bookId) => {\r\n    navigate(`/admin/update/${bookId}`);\r\n  };\r\n\r\n  const handleDeleteBook = async (bookId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:8182/Book/delete/${bookId}`);\r\n      fetchBooks();\r\n    } catch (error) {\r\n      console.error(\"Error deleting book:\", error.message);\r\n    }\r\n  };\r\n\r\n  const renderUniqueCustomerBookings = (customerBookings) => {\r\n    const uniqueCustomerBookings = [];\r\n    const bookingIds = new Set();\r\n\r\n    for (const booking of customerBookings) {\r\n      if (!bookingIds.has(booking.id)) {\r\n        uniqueCustomerBookings.push(booking);\r\n        bookingIds.add(booking.id);\r\n      }\r\n    }\r\n\r\n    return uniqueCustomerBookings;\r\n  };\r\n\r\n  const renderCustomerDropdown = (customer) => {\r\n    const customerBookings = customerBookings.filter((booking) => booking.customer.id === customer.id);\r\n\r\n    if (customerBookings.length > 1) {\r\n      return (\r\n        <div>\r\n          <select onChange={(e) => handleBookSelection(e.target.value)}>\r\n            <option value=\"\">Select Book</option>\r\n            {customerBookings.map((booking) => (\r\n              <option key={booking.id} value={booking.book.id}>\r\n                {booking.book.bookTitle}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const handleBookSelection = (selectedBookId) => {\r\n    // Implement logic to handle book selection and display corresponding details\r\n    // You can use this function to set state variables for issue date, return date, and price\r\n    // based on the selected book ID.\r\n  };\r\n\r\n  const filteredBooks = filterData(books, searchQuery);\r\n  const filteredCustomers = filterData(customers, searchQuery);\r\n  const filteredCustomerBookings = filterData(customerBookings, searchQuery);\r\n\r\n  const shouldShowBooks = showBooks || searchQuery !== '';\r\n  const shouldShowCustomers = showCustomers || searchQuery !== '';\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#15202B\", minHeight: \"100vh\", color: \"#FFFFFF\", fontFamily: \"Arial, sans-serif\" }}>\r\n      <AdminNavbar />\r\n\r\n      <div className=\"container mt-5\">\r\n        <h1 className=\"mb-4 text-center\" style={{ color: \"#61dafb\", fontSize: \"3.5rem\" }}>Admin Dashboard</h1>\r\n\r\n        <Form.Group controlId=\"formSearch\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Search...\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            style={{ fontSize: \"1.2rem\" }}\r\n          />\r\n        </Form.Group>\r\n        <br />\r\n\r\n        <div className=\"text-center\">\r\n          <button\r\n            className={`btn btn-${shouldShowBooks ? \"danger\" : \"success\"} mb-2 mx-2`}\r\n            onClick={() => setShowBooks(!showBooks)}\r\n            style={{ fontSize: \"1.2rem\" }}\r\n          >\r\n            {shouldShowBooks ? `Hide Books (${filteredBooks.length})` : `Show Books (${filteredBooks.length})`}\r\n          </button>\r\n\r\n          <button\r\n            className={`btn btn-${shouldShowCustomers ? \"danger\" : \"success\"} mb-2 mx-2`}\r\n            onClick={() => setShowCustomers(!showCustomers)}\r\n            style={{ fontSize: \"1.2rem\" }}\r\n          >\r\n            {shouldShowCustomers ? `Hide Customers (${filteredCustomers.length})` : `Show Customers (${filteredCustomers.length})`}\r\n          </button>\r\n\r\n          <button\r\n            className={`btn ${showCustomerBookings ? \"btn-danger\" : \"btn-success\"} mb-2 mx-2`}\r\n            onClick={() => setShowCustomerBookings(!showCustomerBookings)}\r\n            style={{ fontSize: \"1.2rem\" }}\r\n          >\r\n            {showCustomerBookings ? \"Hide Customer Bookings\" : \"Show Customer Bookings\"}\r\n          </button>\r\n        </div>\r\n\r\n        {shouldShowBooks && (\r\n          <div className=\"d-flex flex-wrap justify-content-center\">\r\n            {filteredBooks.map((book) => (\r\n              <Card key={book.id} className=\"m-2\" style={{ width: \"22rem\", backgroundColor: \"#343a40\", color: \"#FFFFFF\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\r\n                <Card.Body>\r\n                  <Card.Title style={{ color: \"#61dafb\", fontSize: \"1.5rem\" }}>{book.bookTitle}</Card.Title>\r\n                  <Card.Text><strong>Author:</strong> {book.author}</Card.Text>\r\n                  <Card.Text><strong>Price:</strong> {book.bookPrice}</Card.Text>\r\n                  <Card.Text><strong>ISBN:</strong> {book.isbn}</Card.Text>\r\n                  <Button variant=\"info\" onClick={() => navigateToUpdateBook(book.id)} style={{ fontSize: \"1.2rem\" }}>\r\n                    UPDATE\r\n                  </Button> &nbsp;\r\n                  <Button variant=\"danger\" onClick={() => handleDeleteBook(book.id)} style={{ fontSize: \"1.2rem\" }}>\r\n                    DELETE\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {shouldShowCustomers && (\r\n          <div className=\"d-flex flex-wrap justify-content-center\">\r\n            {filteredCustomers.map((customer) => (\r\n              <Card key={customer.id} className=\"m-2\" style={{ width: \"18rem\", backgroundColor: \"#343a40\", color: \"#FFFFFF\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\r\n                <Card.Body>\r\n                  <Card.Title style={{ color: \"#61dafb\", fontSize: \"1.5rem\" }}>{customer.name}</Card.Title>\r\n                  <Card.Text><strong>City:</strong> {customer.city}</Card.Text>\r\n                  <Card.Text><strong>Contact:</strong> {customer.contact}</Card.Text>\r\n\r\n                  {renderCustomerDropdown(customer)}\r\n\r\n                </Card.Body>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        )}\r\n        {showCustomerBookings && (\r\n          <div className=\"d-flex flex-wrap\">\r\n            {renderUniqueCustomerBookings(customerBookings).map((booking) => (\r\n              <Card key={booking.id} className=\"m-2\" style={{ width: \"18rem\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\r\n                <Card.Body>\r\n                  <Card.Title className=\"custom-card-title\" style={{ fontWeight: \"bold\" }}>\r\n                    {booking.customer ? booking.customer.name : \" \"}\r\n                  </Card.Title>\r\n\r\n                  {renderCustomerDropdown(booking.customer)}\r\n\r\n                  <Card.Text className=\"custom-card-text\" style={{ fontSize: \"1rem\" }}>\r\n                    <strong>Book Title:</strong> {booking.book.bookTitle}\r\n                  </Card.Text>\r\n                  <Card.Text style={{ fontSize: \"1.2rem\", color: \"#495057\" }}>\r\n                    <strong>Issue Date:</strong> {booking.issueDate}\r\n                  </Card.Text>\r\n                  <Card.Text style={{ fontSize: \"1.2rem\", color: \"#495057\" }}>\r\n                    <strong>Return Date:</strong> {booking.returnDate}\r\n                  </Card.Text>\r\n                  <Card.Text style={{ fontSize: \"1.2rem\", color: \"#ff4500\" }}>\r\n                    <strong>Fine Amount:</strong> ${booking.amount.toFixed(2)}\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AACpD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,sCAAsC;AAAC,SAAAC,MAAA,I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"},"metadata":{},"sourceType":"module","externalDependencies":[]}